import numpy as np

def thomas_algorithm(a, b, c, d):
    n = len(d)
    c_dash = np.zeros(n-1)
    d_dash = np.zeros(n)
    x = np.zeros(n)
    
    c_dash[0] = c[0] / b[0]
    d_dash[0] = d[0] / b[0]
    
    for i in range(1, n-1):
        c_dash[i] = c[i] / (b[i] - a[i-1] * c_dash[i-1])
    
    for i in range(1, n):
        d_dash[i] = (d[i] - a[i-1] * d_dash[i-1]) / (b[i] - a[i-1] * c_dash[i-1])
    
    x[n-1] = d_dash[n-1]
    
    for i in range(n-2, -1, -1):
        x[i] = d_dash[i] - c_dash[i] * x[i+1]
    
    return x

# Задаем коэффициенты для метода прогонки
a = np.array([0, 7, -2, 2])
b = np.array([7, -7, 15, -12, 3])
c = np.array([-2, 4, 5, -8])
d = np.array([65, 23, 1, -58, -8])

# Решаем систему методом прогонки
solution_thomas = thomas_algorithm(a, b, c, d)
print("\nРешение системы уравнений методом прогонки:")
print(solution_thomas)
